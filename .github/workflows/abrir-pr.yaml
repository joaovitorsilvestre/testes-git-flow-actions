name: Validar novo PR

on:
  pull_request:

jobs:
  validar-pr:
    runs-on:
      - ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Validar titulo do PR
        id: pr_valido
        # Valida que o PR tem o titulo no formato certo. Regras:
        # Ele deve começar com o nível de alteração: [fix], [feat] ou [major]

        run: |
          PR_TITLE=$(echo ${{ github.event.pull_request.title }} | tr '[:upper:]' '[:lower:]')
          
          if [[ $PR_TITLE =~ ^\[(fix|feat|major)\].*$ ]]; then
              echo "Título do PR válido"
              echo "FECHAR_PR='Titulo de PR inválido. Deve começar com [fix], [feat] ou [major]'" >> $GITHUB_OUTPUT
          else
              echo "Título do PR inválido"
              exit 1
          fi

      - name: Validar nome da branch
        id: branch_valida
        # Valida que a BRANCH tem o nome válido. Regras:
        # * Branch do “próximo lançamento”: develop
        # * Branches de desenvolvimento de funcionalidades: feat/xpto
        # * Branches de desenvolvimento de correções de bug: bugfix/xpto
        # * Branches de versão canditadas a lançamento: v0.0.0
        # * Branches de correções de emergência: hotfix/xpto
        run: |
          
          PR_BRANCH=$(echo ${{ github.head_ref }} | sed 's/refs\/heads\///')
          
          if [[ $PR_BRANCH == "develop" ]]; then
              echo "Nome da branch é válido"
              echo "FECHAR_PR='Titulo de PR inválido'" >> $GITHUB_OUTPUT
          elif [[ $PR_BRANCH =~ ^feat/.*$ || $PR_BRANCH =~ ^bugfix/.*$ || $PR_BRANCH =~ ^hotfix/.*$ || $PR_BRANCH =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "Nome da branch é válido"
          else
              echo "Nome da branch é inválido"
              echo "FECHAR_PR='Nome de branch inválido. \n\n Aceitos: develop, feat/xpto, bugfix/xpto, v0.0.0 e hotfix/xpto'" >> $GITHUB_OUTPUT
              exit 1
          fi

      - name: Pegar arquivos modificados
        id: changed-files-yaml
        uses: tj-actions/changed-files@v43
        with:
          files_yaml: |
            arquivos_nativos_ou_libs:
              - 'android/**'
              - 'ios/**'
              - 'package.json'
              - 'yarn.lock'

      - name: Validar se não alterou código nativou ou libs se for HOTFIX
        id: branch_hotfix_valida
        if: steps.changed-files-yaml.outputs.arquivos_nativos_ou_libs == 'true'
        run: |
          PR_BRANCH=$(echo ${{ github.head_ref }} | sed 's/refs\/heads\///')
          
          if [[ $PR_BRANCH =~ ^hotfix/.*$ ]]; then
              echo "Branchs HOTFIX não podem alterar código nativo ou bibliotecas"
              exit 1
          fi

      - name: Fechar PR se for preciso com a mensagem do motivo
        if: always()
        run: |
          if [[ steps.pr_valido.outputs.FECHAR_PR != '' ]]; then
              MENSAGEM="${{ steps.pr_valido.outputs.FECHAR_PR }}"
          elif [[ steps.branch_valida.outputs.FECHAR_PR != '' ]]; then
              MENSAGEM="${{ steps.branch_valida.outputs.FECHAR_PR }}"
          elif [[ steps.branch_hotfix_valida.outputs.FECHAR_PR != '' ]]; then
              MENSAGEM="${{ steps.branch_hotfix_valida.outputs.FECHAR_PR }}"
          else
              exit 0
          fi
          
          gh pr comment ${{ github.event.pull_request.number }} --body "$MENSAGEM"
          gh pr close ${{ github.event.pull_request.number }}

      - name: Executar testes
        uses: ./.github/rodar-testes
